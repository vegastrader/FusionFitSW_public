@import 'emoji-keyboard-theme';
@import 'elements-theme';

// Initilize the global application theme
@mixin wm-init-application-theme($theme, $typography) {

  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  
  // Includes the material core component independent theme styles w/ typography
  @include mat-core($typography);
  
  // Includes a material component specifics theme styles
  @include angular-material-theme($theme);

  // Ovverrides standard material typo margins
  @include tweak-material-typo-margins();

  // Tweaks material compoment styles for improved flexibility
  @include tweak-material-components();

  // Styles the elements according to the theme
  @include wm-elements-theme($theme);

  // Styles the emoji-keyboard component
  @include wm-emoji-keyboard($theme);

  // Styles the theme colors globally
  @include wm-theme-colors($theme, ('color', 'background-color', 'border-color', 'stroke', 'fill'));

  // Styles the skeleton loading animation class
  @include skeleton-loading(map-get($foreground, 'divider')) {
    
    // Patches the avatar element color
    &.wm-avatar { fill: opacify(map-get($foreground, 'divider'), 0.25); }
  }

  // Styles links
  a { 
    cursor: pointer;    
    text-decoration: none;

    // Styles according the theme palette colors
    color: mat-color($primary); 
    @each $color in ('accent', 'warn') { &[color=#{$color}] { color: mat-color( map-get($theme, #{$color}) ); }}

    // Styles the disabled link
    &[disabled=true] {

      text-decoration: dotted underline;
      color: map-get( map-get($theme, 'foreground'), 'disabled');
    }    
  }

  // Smoothen the text color on content
  p, li, td { 
    line-height: 1.5;
    color: rgba( map-get(map-get($theme, 'foreground'), 'text'), 0.8); 
  }

  // Defines a global style for blockquotes
  blockquote {
    padding: 0 1em;
    color: rgba(black, 0.4);
    border-left: 0.25em solid rgba(black, 0.11);
    p, li, td { color: inherit; }
  }

  // Ensures the inline-code breaks, eventually
  code { 
    overflow-wrap: break-word; 
    font-family: 'Ubuntu Mono', monospace;
  }

  // Defines a global style for tables
  table { border-collapse: collapse; }

  td { 
      
    padding: 8px;
    
    &:first-of-type { padding-left: 24px; }
    &:last-of-type { padding-right: 24px; }

    border-bottom: 1px solid map-get( map-get($theme, 'foreground'), 'divider'); 
  }

  // Defines a global style for dividers
  hr { 

    height: 4px;
    line-height: 24px;
    margin: 24px 0;
    border-style: none;

    background-color: map-get( map-get($theme, 'foreground'), 'divider'); 
  }

  // Ovverrides the autofill styles to blend in with the theme
  input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill {
    &, &:hover, &:focus, &:active {
      // Use the custom text-fill-color to override the color property
      -webkit-text-fill-color: map-get( map-get($theme, 'foreground'), 'text') !important;
      // Use an inset box-shadow to overlap the autofill background color
      box-shadow: 0 0 0px 1000px map-get( map-get($theme, 'background'), 'background') inset !important;
    }
  }

  .mat-dialog-container {
    // Ovverrides the autofill styles to blend in with the theme
    input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill {
      &, &:hover, &:focus, &:active {
        // Use an inset box-shadow to overlap the autofill background color
        box-shadow: 0 0 0px 1000px map-get( map-get($theme, 'background'), 'dialog') inset !important;
      }
    }
  }
}

// Initialize the application theme colors only (to be used for multiple themes)
@mixin wm-init-application-colors($theme) {

  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  
  // Includes a material component specifics colors only
  @include angular-material-color($theme);

  // Styles the elements according to the theme
  @include wm-elements-theme($theme);

  // Styles the emoji-keyboard component
  @include wm-emoji-keyboard($theme);

  // Styles the theme colors globally
  @include wm-theme-colors($theme, ('color', 'background-color', 'border-color', 'stroke', 'fill'));

  // Styles the skeleton loading animation class
  @include skeleton-loading(map-get($foreground, divider)) {
    
    // Patches the avatar element color
    &.wm-avatar { fill: opacify(map-get($foreground, divider), 0.25); }
  }

  // Styles links
  a { 
    // Styles according the theme palette colors
    color: mat-color($primary); 
    @each $color in ('accent', 'warn') { &[color=#{$color}] { color: mat-color( map-get($theme, #{$color}) ); }}

    // Styles the disabled link
    &[disabled=true] { color: map-get( map-get($theme, 'foreground'), 'disabled'); }    
  }

  // Smoothen the text color on content
  p, li, td { color: rgba( map-get(map-get($theme, 'foreground'), 'text'), 0.8); }

  td { border-bottom: 1px solid map-get( map-get($theme, 'foreground'), 'divider'); }

  // Defines a global style for dividers
  hr { background-color: map-get( map-get($theme, 'foreground'), 'divider'); }

  // Ovverrides the autofill styles to blend in with the theme
  input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill {
    &, &:hover, &:focus, &:active {
      // Use an inset box-shadow to overlap the autofill background color
      box-shadow: 0 0 0px 1000px map-get( map-get($theme, 'background'), 'background') inset !important;
      // Use the custom text-fill-color to override the color property
      -webkit-text-fill-color: map-get( map-get($theme, 'foreground'), 'text') !important;
    }
  }

  .mat-dialog-container {
    // Ovverrides the autofill styles to blend in with the theme
    input:-webkit-autofill, textarea:-webkit-autofill, select:-webkit-autofill {
      &, &:hover, &:focus, &:active {
        // Use an inset box-shadow to overlap the autofill background color
        box-shadow: 0 0 0px 1000px map-get( map-get($theme, 'background'), 'dialog') inset !important;
      }
    }
  }
}
